[gd_scene load_steps=5 format=3 uid="uid://igd17bg03lye"]

[ext_resource type="Script" path="res://scenes/Enemy.gd" id="1_pn655"]

[sub_resource type="CircleShape2D" id="CircleShape2D_ms0ta"]
radius = 16.0

[sub_resource type="CanvasTexture" id="CanvasTexture_qonil"]

[sub_resource type="GDScript" id="GDScript_biysp"]
script/source = "extends Node2D

class_name MovementComponent

var _speed : float : set = set_speed, get = get_speed
var _entity : Node2D: set = _set_entity, get = get_entity

func _asserts(entity: Node2D, speed: float) -> void:
	_entity_assert(entity)
	_speed_assert(speed)
	pass

func _entity_assert(entity: Node2D) -> void:
	assert(entity != null, \"entity must not be null\")
	#assert(entity is AbstractEntity, \"entity must be an instance of AbstractEntity\")
	pass

func _speed_assert(speed: float) -> void:
	assert(speed > 0, \"Speed must be greater than 0\")
	pass

func _init(entity: Node2D, speed: float) -> void:

	_asserts(entity, speed)
	self._entity = entity
	self._speed = speed
	pass

func _set_entity(entity: Node2D) -> void:
	_entity = entity
	pass

func get_entity() -> Node2D:
	return _entity

func set_speed(speed: float) -> void:
	_speed = speed
	pass

func get_speed() -> float:
	return _speed

func _ready():
	pass

func move(target_pos: Vector2, speed: float) -> Vector2:
	return get_parent().position.move_toward(target_pos, speed)
"

[node name="Enemy" type="RigidBody2D"]
gravity_scale = 0.0
max_contacts_reported = 4
contact_monitor = true
script = ExtResource("1_pn655")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource("CircleShape2D_ms0ta")

[node name="Sprite2D" type="Sprite2D" parent="."]
scale = Vector2(32, 32)
texture = SubResource("CanvasTexture_qonil")

[node name="MovementComponent" type="Node2D" parent="."]
script = SubResource("GDScript_biysp")

[node name="VisibleOnScreenNotifier2D" type="VisibleOnScreenNotifier2D" parent="."]

[connection signal="body_entered" from="." to="." method="_on_body_entered"]
[connection signal="body_exited" from="." to="." method="_on_body_exited"]
[connection signal="screen_exited" from="VisibleOnScreenNotifier2D" to="." method="_on_visible_on_screen_notifier_2d_screen_exited"]
